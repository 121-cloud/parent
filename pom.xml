<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ 121Cloud 父POM
  ~
  ~  所有121Cloud项目需要引用该POM，引用方法如下：
  
	<parent>
		<groupId>otocloud</groupId>
		<artifactId>otocloud-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

  --> 

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>otocloud</groupId>
  <artifactId>otocloud-parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>121Cloud Parent pom</name>

  <licenses>
    <license>
      <name>121Cloud License,Version 2.0</name>
      <url>http://www.121cloud.com/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	
	<downloadSources>true</downloadSources>  
	<downloadJavadocs>true</downloadJavadocs> 
	
    <!-- Compiler plugin -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
	
	<otocloud.version>1.0.0-SNAPSHOT</otocloud.version>
	<!-- Third-party lib version -->
	<vertx.version>3.3.3</vertx.version>
	<spring.version>4.2.1.RELEASE</spring.version>
	<!-- jackson.datatype.jsr310.version>2.6.1</jackson.datatype.jsr310.version -->
	
	<!-- Validation Libs -->
	<javax.validation.api.version>1.1.0.Final</javax.validation.api.version>
	<javax.el.api.version>2.2.4</javax.el.api.version>
	<hibernate.validator.version>5.2.2.Final</hibernate.validator.version>
	
	<!-- Common Utility -->
	<commons.collections4>4.0</commons.collections4>
	<gson.version>2.4</gson.version>
	<commons.lang3.version>3.4</commons.lang3.version>
	<quartz.version>2.1.7</quartz.version>
	<!-- 目前系统没有显式使用该包，是为了解决otocloud包编译问题而增加。 -->
	<vertx.codegen.version>3.3.3</vertx.codegen.version>

	<!-- JDBC Driver -->	
	<mysql.connector.java.version>5.1.36</mysql.connector.java.version>
	
	<!-- LOG4J -->
	<log4j.version>2.4</log4j.version>
	
	<!-- For testing -->
	<junit.version>4.12</junit.version>
	<restassured.version>2.4.0</restassured.version>
	<concurrentunit.version>0.4.2</concurrentunit.version>
	<jmockit.version>1.19</jmockit.version>
	<!--jbehave.version>4.0.4</jbehave.version>
	<jbehave.junit.runner.version> 1.2.0</jbehave.junit.runner.version>
	<assertj.version>2.0.0</assertj.version-->

    <!-- Plugin versions -->

    <!-- We use 3.1 until this is resolved https://jira.codehaus.org/browse/MCOMPILER-236 -->
	<!-- Switch to 3.3 -->
    <maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>
    <maven.jar.plugin.version>2.6</maven.jar.plugin.version>
    <maven.source.plugin.version>2.4</maven.source.plugin.version>
    <maven.resources.plugin.version>2.7</maven.resources.plugin.version>
    <maven.javadoc.plugin.version>2.10.1</maven.javadoc.plugin.version>
    <maven.dependency.plugin.version>2.9</maven.dependency.plugin.version>
    <maven.clean.plugin.version>2.6.1</maven.clean.plugin.version>
    <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
    <maven.install.plugin.version>2.5.2</maven.install.plugin.version>
    <maven.site.plugin.version>3.4</maven.site.plugin.version>
    <maven.surefire.plugin.version>2.18</maven.surefire.plugin.version>
    <maven.surefire.report.plugin.version>2.18</maven.surefire.report.plugin.version>
    <maven.enforcer.plugin.version>1.3.1</maven.enforcer.plugin.version>
    <maven.jacoco.plugin.version>0.7.5.201505241946</maven.jacoco.plugin.version>

    <!--
    surefire argLine empty by default
    it will be populated by plugin contributing to the surefire and failsafe argument line.
    -->
    <surefireArgLine/>
  </properties>

  <dependencyManagement>
	<dependencies>
		<!-- Vertx -->
		<dependency>
		  <groupId>io.vertx</groupId>
		  <artifactId>vertx-core</artifactId>
		  <version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-http-service-factory</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
		  <groupId>io.vertx</groupId>
		  <artifactId>vertx-jdbc-client</artifactId>
		  <version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-auth-jdbc</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
		  <groupId>io.vertx</groupId>
		  <artifactId>vertx-hazelcast</artifactId>  
		  <version>${vertx.version}</version>      
		</dependency>    
		<dependency>
		  <groupId>io.vertx</groupId>
		  <artifactId>vertx-mongo-client</artifactId>
		  <version>${vertx.version}</version>
		</dependency>
		<dependency>
		  <groupId>io.vertx</groupId>
		  <artifactId>vertx-redis-client</artifactId>		
		  <version>${vertx.version}</version>  
		</dependency>	
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-dropwizard-metrics</artifactId>
			<version>${vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-maven-service-factory</artifactId>
			<version>${vertx.version}</version>
		</dependency>   
		<!--dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
		    <version>${jackson.datatype.jsr310.version}</version>
		</dependency-->
				
		<!-- IOC -->
<!-- 		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency> -->
		
		<!-- 通用工具类 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons.collections4}</version>
		</dependency>
		<!-- commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang3.version}</version>
        </dependency>
<!-- 		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency> -->
		<dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>
        <!-- 目前系统没有显式使用该包，是为了解决otocloud包编译问题而增加。 -->
		<dependency>
		<groupId>io.vertx</groupId>
		<artifactId>vertx-codegen</artifactId>
		<version>${vertx.codegen.version}</version>
		</dependency>

		<!-- 验证框架 -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax.validation.api.version}</version>
		</dependency>
<!-- 		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency> -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>${javax.el.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Mysql数据库 -->
		<dependency>
		  <groupId>mysql</groupId>
		  <artifactId>mysql-connector-java</artifactId>
		  <version>${mysql.connector.java.version}</version>
		</dependency>

		<!-- log -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		
		<!-- For Testing -->
		<dependency>
		  <groupId>junit</groupId>
		  <artifactId>junit</artifactId>
		  <version>${junit.version}</version>
		  <scope>test</scope>
		</dependency>
		<dependency>
		  <groupId>io.vertx</groupId>
		  <artifactId>vertx-unit</artifactId>
		  <version>${vertx.version}</version>
		  <scope>test</scope>
		</dependency>
		<!-- Some other test dependencies to ease integration testing -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${restassured.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		<!-- 并发测试支持包 -->
		<groupId>net.jodah</groupId>
			<artifactId>concurrentunit</artifactId>
			<version>${concurrentunit.version}</version>
			<scope>test</scope>
		</dependency>
		<!--dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<scope>test</scope>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-core</artifactId>
			<version>${jbehave.version}</version>
		</dependency>
		<dependency>
			<scope>test</scope>
			<groupId>de.codecentric</groupId>
			<artifactId>jbehave-junit-runner</artifactId>
			<version>${jbehave.junit.runner.version}</version>
		</dependency-->
		<dependency>
			<scope>test</scope>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<version>${jmockit.version}</version>
		</dependency>
	</dependencies>
  </dependencyManagement>
  
  <build>
	<resources>  
		<resource>  
			<targetPath>${project.build.directory}/config</targetPath>  
			<directory>src/main/config</directory> 
			<filtering>true</filtering>
			<includes>
				<include>**/*.xml</include>
				<include>**/*.properties</include> 
				<include>**/*.json</include>
				<include>**/*.yml</include>
			</includes>
		</resource>
		<resource>  
			<targetPath>${project.build.directory}/bin</targetPath>  
			<directory>src/main/bin</directory>  
		</resource> 
		<resource>  
			<directory>src/main/resources</directory> 
			<filtering>true</filtering>
		</resource>
	</resources>
	
	<!-- Need to enable the filtering of the src/test/resources to inject the random port -->
	<testResources>
		<testResource>
			<directory>src/test/resources</directory>
			<filtering>true</filtering>
		</testResource>
		<testResource>  
			<directory>src/test/config</directory> 
			<targetPath>${project.build.directory}/config</targetPath>
		</testResource>
	</testResources>
  
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin.version}</version>
          <configuration>
            <optimize>true</optimize>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven.source.plugin.version}</version>
		  <executions>
			  <execution>
				<id>attach-sources</id>
				<goals>
				  <goal>jar</goal>
				  <goal>test-jar</goal>
				</goals>
			  </execution>
		  </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin.version}</version>
          <executions>
            <execution>
              <id>default-jar</id>
              <configuration>
                <archive>
                  <!-- Generate a jar INDEX.LIST -->
                  <index>true</index>
				  <!-- Generate dependent libs which is used to download libs during jar deployment -->
				  <manifest>
					<addClasspath>true</addClasspath>
					<classpathPrefix></classpathPrefix>
					<useUniqueVersions>false</useUniqueVersions>
                  </manifest>
				  <!-- Add the Maven coordinates in the manifest -->
                  <manifestEntries>
                    <Maven-Group-Id>${project.groupId}</Maven-Group-Id>
                    <Maven-Artifact-Id>${project.artifactId}</Maven-Artifact-Id>
                    <Maven-Version>${project.version}</Maven-Version>
                  </manifestEntries>
                </archive>
                <!-- Remove examples and docoverride -->
                <excludes>
                  <exclude>/docoverride/**</exclude>
                  <exclude>/examples/**</exclude>
                </excludes>
              </configuration>
            </execution>
			<execution>
				<id>attach-test-jar</id>
				<goals>
				  <goal>test-jar</goal>
				</goals>
			</execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
          <configuration>
            <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
            <systemPropertyVariables>
              	<io.netty.leakDetectionLevel>PARANOID</io.netty.leakDetectionLevel>
              	<!-- 设置log4j配置参数到system property -->
				<log4j.configurationFile>${project.build.directory}/config/log4j2.xml</log4j.configurationFile>
				<vertx.logger-delegate-factory-class-name>io.vertx.core.logging.SLF4JLogDelegateFactory</vertx.logger-delegate-factory-class-name>
            </systemPropertyVariables>
			<!-- 缺省测试用例文件名以Test.java或TestCase.java结尾，增加集成测试用例IT.java -->
			<includes>
				<include>**/*IT.java</include>
				<include>**/Test*.java</include>
				<include>**/*Test.java</include>
				<include>**/*TestCase.java</include>
			</includes>
            <!--
            Memory: Needs to be small enough to run in a EC2 1.7GB small instance
            ArgLine: Allow using plugin injecting argLine (such as Jacoco) - notice the @{} instead of ${} to enable
            the late replacement.
            -->
            <argLine>-server -Xmx1200M @{surefireArgLine}</argLine>
            <forkCount>1</forkCount>
            <reuseForks>true</reuseForks>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${maven.surefire.report.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.plugin.version}</version>
          <!-- Remove impl and keep only io/vertx files (no examples or docoverride) -->
          <configuration>
            <additionalparam>-Xdoclint:none</additionalparam>
            <sourceFileExcludes>
              <sourceFileExclude>**/package-info.java</sourceFileExclude>
              <sourceFileExclude>**/impl/**</sourceFileExclude>
            </sourceFileExcludes>
            <sourceFileIncludes>
              <sourceFileInclude>otocloud/**/*.java</sourceFileInclude>
            </sourceFileIncludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.dependency.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven.deploy.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.enforcer.plugin.version}</version>
        </plugin>
		
      </plugins>
    </pluginManagement>
  </build>

  <profiles> 
    <profile>
      <id>sonatype-oss-release</id>
      <build>
        <plugins>
          <!-- Set plugin version due to wrong plugin version when activating this profile -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven.javadoc.plugin.version}</version>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-no-vertx-snapshots</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireReleaseDeps>
                      <message>No Vert.x Snapshots Allowed during a release!</message>
                      <includes>
                        <include>io.vertx:*</include>
                      </includes>
                    </requireReleaseDeps>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>coverage</id>

      <!-- ease sonar integration -->
      <properties>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${maven.jacoco.plugin.version}</version>
            <executions>
              <execution>
                <id>pre-unit-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${sonar.jacoco.reportPath}</destFile>
                  <propertyName>surefireArgLine</propertyName>
                </configuration>
              </execution>

              <execution>
                <id>post-unit-test</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${sonar.jacoco.reportPath}</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
	<distributionManagement>
		<!-- 配置快照版本发布的仓库 -->
		<snapshotRepository>
			<id>ocr-snapshots</id>
			<name>ocr Snapshots Repository</name>
			<url>http://127.0.0.1:8888/repository/omni-channel-retailing/</url>
		</snapshotRepository>
		<!-- 配置release版本发布的仓库 -->
		<repository>
			<id>ocr-releases</id>
			<name>ocr Releases Repository</name>
			<url>http://127.0.0.1:8888/repository/omni-channel-retailing-release/</url>
		</repository>		
	</distributionManagement>
</project>  
